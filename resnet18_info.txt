
conv1
bn1
relu
maxpool
layer1
layer1.0
layer1.0.conv1
layer1.0.bn1
layer1.0.relu
layer1.0.conv2
layer1.0.bn2
layer1.1
layer1.1.conv1
layer1.1.bn1
layer1.1.relu
layer1.1.conv2
layer1.1.bn2
layer2
layer2.0
layer2.0.conv1
layer2.0.bn1
layer2.0.relu
layer2.0.conv2
layer2.0.bn2
layer2.0.downsample
layer2.0.downsample.0
layer2.0.downsample.1
layer2.1
layer2.1.conv1
layer2.1.bn1
layer2.1.relu
layer2.1.conv2
layer2.1.bn2
layer3
layer3.0
layer3.0.conv1
layer3.0.bn1
layer3.0.relu
layer3.0.conv2
layer3.0.bn2
layer3.0.downsample
layer3.0.downsample.0
layer3.0.downsample.1
layer3.1
layer3.1.conv1
layer3.1.bn1
layer3.1.relu
layer3.1.conv2
layer3.1.bn2
layer4
layer4.0
layer4.0.conv1
layer4.0.bn1
layer4.0.relu
layer4.0.conv2
layer4.0.bn2
layer4.0.downsample
layer4.0.downsample.0
layer4.0.downsample.1
layer4.1
layer4.1.conv1
layer4.1.bn1
layer4.1.relu
layer4.1.conv2
layer4.1.bn2
avgpool
fc
['', 'conv1', 'bn1', 'relu', 'maxpool', 'layer1', 'layer1.0', 'layer1.0.conv1', 'layer1.0.bn1', 'layer1.0.relu', 'layer1.0.conv2', 'layer1.0.bn2', 'layer1.1', 'layer1.1.conv1', 'layer1.1.bn1', 'layer1.1.relu', 'layer1.1.conv2', 'layer1.1.bn2', 'layer2', 'layer2.0', 'layer2.0.conv1', 'layer2.0.bn1', 'layer2.0.relu', 'layer2.0.conv2', 'layer2.0.bn2', 'layer2.0.downsample', 'layer2.0.downsample.0', 'layer2.0.downsample.1', 'layer2.1', 'layer2.1.conv1', 'layer2.1.bn1', 'layer2.1.relu', 'layer2.1.conv2', 'layer2.1.bn2', 'layer3', 'layer3.0', 'layer3.0.conv1', 'layer3.0.bn1', 'layer3.0.relu', 'layer3.0.conv2', 'layer3.0.bn2', 'layer3.0.downsample', 'layer3.0.downsample.0', 'layer3.0.downsample.1', 'layer3.1', 'layer3.1.conv1', 'layer3.1.bn1', 'layer3.1.relu', 'layer3.1.conv2', 'layer3.1.bn2', 'layer4', 'layer4.0', 'layer4.0.conv1', 'layer4.0.bn1', 'layer4.0.relu', 'layer4.0.conv2', 'layer4.0.bn2', 'layer4.0.downsample', 'layer4.0.downsample.0', 'layer4.0.downsample.1', 'layer4.1', 'layer4.1.conv1', 'layer4.1.bn1', 'layer4.1.relu', 'layer4.1.conv2', 'layer4.1.bn2', 'avgpool', 'fc']
{'conv1': torch.Size([3, 64, 112, 112]), 'bn1': torch.Size([3, 64, 112, 112]), 'relu': torch.Size([3, 64, 112, 112]), 'maxpool': torch.Size([3, 64, 56, 56]), 'layer1.0.conv1': torch.Size([3, 64, 56, 56]), 'layer1.0.bn1': torch.Size([3, 64, 56, 56]), 'layer1.0.relu': torch.Size([3, 64, 56, 56]), 'layer1.0.conv2': torch.Size([3, 64, 56, 56]), 'layer1.0.bn2': torch.Size([3, 64, 56, 56]), 'layer1.0': torch.Size([3, 64, 56, 56]), 'layer1.1.conv1': torch.Size([3, 64, 56, 56]), 'layer1.1.bn1': torch.Size([3, 64, 56, 56]), 'layer1.1.relu': torch.Size([3, 64, 56, 56]), 'layer1.1.conv2': torch.Size([3, 64, 56, 56]), 'layer1.1.bn2': torch.Size([3, 64, 56, 56]), 'layer1.1': torch.Size([3, 64, 56, 56]), 'layer1': torch.Size([3, 64, 56, 56]), 'layer2.0.conv1': torch.Size([3, 128, 28, 28]), 'layer2.0.bn1': torch.Size([3, 128, 28, 28]), 'layer2.0.relu': torch.Size([3, 128, 28, 28]), 'layer2.0.conv2': torch.Size([3, 128, 28, 28]), 'layer2.0.bn2': torch.Size([3, 128, 28, 28]), 'layer2.0.downsample.0': torch.Size([3, 128, 28, 28]), 'layer2.0.downsample.1': torch.Size([3, 128, 28, 28]), 'layer2.0.downsample': torch.Size([3, 128, 28, 28]), 'layer2.0': torch.Size([3, 128, 28, 28]), 'layer2.1.conv1': torch.Size([3, 128, 28, 28]), 'layer2.1.bn1': torch.Size([3, 128, 28, 28]), 'layer2.1.relu': torch.Size([3, 128, 28, 28]), 'layer2.1.conv2': torch.Size([3, 128, 28, 28]), 'layer2.1.bn2': torch.Size([3, 128, 28, 28]), 'layer2.1': torch.Size([3, 128, 28, 28]), 'layer2': torch.Size([3, 128, 28, 28]), 'layer3.0.conv1': torch.Size([3, 256, 14, 14]), 'layer3.0.bn1': torch.Size([3, 256, 14, 14]), 'layer3.0.relu': torch.Size([3, 256, 14, 14]), 'layer3.0.conv2': torch.Size([3, 256, 14, 14]), 'layer3.0.bn2': torch.Size([3, 256, 14, 14]), 'layer3.0.downsample.0': torch.Size([3, 256, 14, 14]), 'layer3.0.downsample.1': torch.Size([3, 256, 14, 14]), 'layer3.0.downsample': torch.Size([3, 256, 14, 14]), 'layer3.0': torch.Size([3, 256, 14, 14]), 'layer3.1.conv1': torch.Size([3, 256, 14, 14]), 'layer3.1.bn1': torch.Size([3, 256, 14, 14]), 'layer3.1.relu': torch.Size([3, 256, 14, 14]), 'layer3.1.conv2': torch.Size([3, 256, 14, 14]), 'layer3.1.bn2': torch.Size([3, 256, 14, 14]), 'layer3.1': torch.Size([3, 256, 14, 14]), 'layer3': torch.Size([3, 256, 14, 14]), 'layer4.0.conv1': torch.Size([3, 512, 7, 7]), 'layer4.0.bn1': torch.Size([3, 512, 7, 7]), 'layer4.0.relu': torch.Size([3, 512, 7, 7]), 'layer4.0.conv2': torch.Size([3, 512, 7, 7]), 'layer4.0.bn2': torch.Size([3, 512, 7, 7]), 'layer4.0.downsample.0': torch.Size([3, 512, 7, 7]), 'layer4.0.downsample.1': torch.Size([3, 512, 7, 7]), 'layer4.0.downsample': torch.Size([3, 512, 7, 7]), 'layer4.0': torch.Size([3, 512, 7, 7]), 'layer4.1.conv1': torch.Size([3, 512, 7, 7]), 'layer4.1.bn1': torch.Size([3, 512, 7, 7]), 'layer4.1.relu': torch.Size([3, 512, 7, 7]), 'layer4.1.conv2': torch.Size([3, 512, 7, 7]), 'layer4.1.bn2': torch.Size([3, 512, 7, 7]), 'layer4.1': torch.Size([3, 512, 7, 7]), 'layer4': torch.Size([3, 512, 7, 7]), 'avgpool': torch.Size([3, 512, 1, 1]), 'fc': torch.Size([3, 1000]), '': torch.Size([3, 1000])}
